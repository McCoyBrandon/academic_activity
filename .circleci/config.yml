# # Use the latest 2.1 version of CircleCI pipeline process engine.
# # See: https://circleci.com/docs/configuration-reference
# version: 2.1

# orbs:
#   #jira: circleci/jira@2.1.0
#   #newman: postman/newman@1.0.0
#   #node: circleci/node@5.1.0
#   #docker: circleci/docker@2.4.0

# # Define a job to be invoked later in a workflow.
# # See: https://circleci.com/docs/configuration-reference/#jobs
# jobs:
#   # Setting up MongoDB connection test. 
#   db_tests:
#     docker:
#       - image: cimg/base:stable
#     steps:
#       - checkout
#       - run: "npm test -- tests/"
#         #name: "Test MongoDB Connection and Objects"
#         #command: "npm test -- tests/"


#   # This was included as an example. Left for easy references and as an example.
#   say-hello:
#     # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
#     # See: https://circleci.com/docs/configuration-reference/#executor-job
#     docker:
#       - image: cimg/base:stable
#     # Add steps to the job
#     # See: https://circleci.com/docs/configuration-reference/#steps
#     steps:
#       - checkout
#       - run:
#           name: "Say hello"
#           command: "echo Hello, World!"

# # Orchestrate jobs using workflows
# # See: https://circleci.com/docs/configuration-reference/#workflows
# workflows:
#   startup-workflow:
#     jobs:
#       - db_tests
#       - say-hello

version: 2.1

jobs:
  frontend-tests:
    machine:
      image: ubuntu-2204:2022.07.1

    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm install
          working_directory: Frontend/AcademicTool/components
      - run:
          name: Run Tests
          command: npm test
          working_directory: Frontend/AcademicTool/components

      - run:
          name: "Build Frontend Docker Image"
          command: |
            docker build -t mccoybs/docker_assignment:AA_FE_latest -f Frontend/AcademicTool/Dockerfile .
      - run:
          name: "Save Frontend Image"
          command: |
            docker save -o frontend-image.tar mccoybs/docker_assignment:AA_FE_latest
      - run:
          name: "login frontend"
          command: |
            echo ihatedocker | docker login -u mccoybs --password-stdin
            docker push mccoybs/docker_assignment:AA_FE_latest

  backend-tests:
    machine:
      image: ubuntu-2204:2022.07.1

    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm install
          working_directory: Backend/backendAcademic
      - run:
          name: Run Tests
          command: npm test 
          working_directory: Backend/backendAcademic

      - run:
          name: "Build Backend Docker Image"
          command: |
            docker build -t mccoybs/docker_assignment:AA_BE_latest -f Backend/backendAcademic/Dockerfile .
      - run:
          name: "Save Backend Image"
          command: |
            docker save -o backend-image.tar mccoybs/docker_assignment:AA_BE_latest
      - run:
          name: "Load and Push Backend Image"
          command: |
            echo ihatedocker | docker login --username mccoybs --password-stdin
            docker push mccoybs/docker_assignment:AA_BE_latest
      - run:
          name: "compose Image"
          command: |
             docker compose push


workflows:
  Setup_and_Test:
    jobs:
      - frontend-tests
      - backend-tests